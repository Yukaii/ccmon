name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: go

  build-and-push:
    needs: release-please
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Install protoc
        run: |
          # Install specific protoc version for consistency
          PROTOC_VERSION=28.0
          PROTOC_ZIP=protoc-${PROTOC_VERSION}-linux-x86_64.zip
          curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/${PROTOC_ZIP}
          sudo unzip -o ${PROTOC_ZIP} -d /usr/local bin/protoc
          sudo unzip -o ${PROTOC_ZIP} -d /usr/local 'include/*'
          rm -f ${PROTOC_ZIP}
          
          # Verify protoc version
          protoc --version
          
          # Install Go protobuf plugins with pinned versions
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28.1
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'dist/**/*'

      - name: Update Homebrew formula
        if: ${{ needs.release-please.outputs.release_created }}
        env:
          TAG_NAME: ${{ needs.release-please.outputs.tag_name }}
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${TAG_NAME#v}

          # Get SHA256 hashes from checksums.txt
          DARWIN_AMD64_SHA=$(grep "ccmon_Darwin_x86_64.tar.gz" dist/checksums.txt | cut -d' ' -f1)
          DARWIN_ARM64_SHA=$(grep "ccmon_Darwin_arm64.tar.gz" dist/checksums.txt | cut -d' ' -f1)
          LINUX_AMD64_SHA=$(grep "ccmon_Linux_x86_64.tar.gz" dist/checksums.txt | cut -d' ' -f1)
          LINUX_ARM64_SHA=$(grep "ccmon_Linux_arm64.tar.gz" dist/checksums.txt | cut -d' ' -f1)

          # Update formula with new version and SHA256 hashes
          sed -i.bak \
            -e "s/version \".*\"/version \"$VERSION\"/" \
            -e "/ccmon_Darwin_x86_64\.tar\.gz/{ n; s/sha256 \".*\"/sha256 \"$DARWIN_AMD64_SHA\"/; }" \
            -e "/ccmon_Darwin_arm64\.tar\.gz/{ n; s/sha256 \".*\"/sha256 \"$DARWIN_ARM64_SHA\"/; }" \
            -e "/ccmon_Linux_x86_64\.tar\.gz/{ n; s/sha256 \".*\"/sha256 \"$LINUX_AMD64_SHA\"/; }" \
            -e "/ccmon_Linux_arm64\.tar\.gz/{ n; s/sha256 \".*\"/sha256 \"$LINUX_ARM64_SHA\"/; }" \
            Formula/ccmon.rb

          # Clean up backup file
          rm -f Formula/ccmon.rb.bak

      - name: Create Homebrew Update PR
        if: ${{ needs.release-please.outputs.release_created }}
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: update-homebrew-${{ needs.release-please.outputs.tag_name }}
          title: "chore: update Homebrew formula to ${{ needs.release-please.outputs.tag_name }}"
          body: |
            Updates Homebrew formula for release ${{ needs.release-please.outputs.tag_name }}

            - Updated version to `${{ needs.release-please.outputs.tag_name }}`
            - Updated SHA256 checksums for all platforms
          commit-message: |
            chore: update Homebrew formula to ${{ needs.release-please.outputs.tag_name }}
          author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          committer: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          delete-branch: true
          add-paths: |
            Formula/ccmon.rb
